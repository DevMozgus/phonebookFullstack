{"version":3,"sources":["service.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObject","post","id","put","delete","PersonForm","props","persons","setPersons","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","input","name","number","filter","person","match","alert","window","confirm","service","map","updatePerson","concat","addPerson","value","onChange","target","type","Notification","message","className","Numbers","Persons","useState","error","setError","newSearch","toLowerCase","indexOf","key","onClick","p","catch","err","console","log","setTimeout","handleDelete","App","setNewSearch","useEffect","ReactDOM","render","document","getElementById"],"mappings":"mOACMA,EAAU,eAqBD,EAnBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB9B,EAdH,SAAAC,GAER,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY9B,EATA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO5B,EAJK,SAAAG,GAClB,OAAOP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,KC8ErBG,EA7FI,SAACC,GAChB,IAAMC,EAAUD,EAAMC,QAChBC,EAAaF,EAAME,WACnBC,EAAUH,EAAMG,QAChBC,EAAaJ,EAAMI,WACnBC,EAAYL,EAAMK,UAClBC,EAAeN,EAAMM,aAiE3B,OACI,oCACA,0CACA,0BAAMC,SApCc,SAACC,GAErBA,EAAMC,iBAEN,IAjCgBC,EAiCVhB,EAAe,CACjBiB,KAAMR,EACNS,OAAQP,GANmB,GA7BfK,EAsCYP,EArCdF,EAAQY,QAAQ,SAAAC,GAC1B,GAAIA,EAAOH,OAASD,EAChB,OAAOI,MAmCTC,EATyB,qBAU/BA,EAAUA,GAAQ,IAETH,SAAWP,EAChBW,MAAM,GAAD,OAAIb,EAAJ,mBAEAY,EAAMJ,OAASR,GACrBY,EAAMH,SAAWP,EACZY,OAAOC,QAAP,UAAkBf,EAAlB,8CA3BS,SAACP,EAAIF,GACtByB,EAAevB,EAAIF,GACdH,MAAK,SAAAC,GACFU,EAAWD,EAAQmB,KAAI,SAAAN,GAAM,OAAIA,EAAOlB,KAAOA,EAAKkB,EAAStB,SAGrEY,EAAW,IACXE,EAAa,IAqBLe,CAAaN,EAAMnB,GAAIF,GAvCjB,SAACA,GAEfyB,EAAYzB,GACPH,MAAK,SAAAC,GACFU,EAAWD,EAAQqB,OAAO9B,OAGlCY,EAAW,IACXE,EAAa,IAkCTiB,CAAU7B,KAgBZ,sCACQ,2BAAO8B,MAAOrB,EACpBsB,SAdiB,SAACjB,GACtBJ,EAAWI,EAAMkB,OAAOF,WAgBtB,wCACU,2BAAOA,MAAOnB,EACtBoB,SAfmB,SAACjB,GACxBF,EAAaE,EAAMkB,OAAOF,WAiBxB,6BACE,4BAAQG,KAAK,UAAb,WC3CNC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAGP,yBAAKC,UAAU,SACVD,IAMPE,EAAU,SAAC/B,GAEb,OACA,2BACI,2BAAIA,EAAMW,MADd,KAC0BX,EAAMY,SAKrBoB,EAjEC,SAAChC,GAAW,IAAD,EACGiC,mBAAS,MADZ,mBAChBC,EADgB,KACTC,EADS,KAGjBlC,EAAUD,EAAMC,QAEhBmC,GADapC,EAAME,WACPF,EAAMoC,WA0BxB,OACI,oCACA,kBAAC,EAAD,CAAcP,QAASK,IAzBnBjC,EAAQY,QAAO,SAAAC,GAAM,OAChBA,EAAOH,KAAM0B,cAAcC,QAAQF,EAAUC,gBAAkB,KAyB9DjB,KAAI,SAAAN,GAAM,OAChB,oCACA,kBAAC,EAAD,CAASyB,IAAKzB,EAAOF,OAAQD,KAAMG,EAAOH,KAAMC,OAAQE,EAAOF,SAC/D,4BAAQ2B,IAAKzB,EAAOlB,GAAI4C,QAAS,kBAvBpB,SAAC1B,GACfG,OAAOC,QAAP,iBAAyBJ,EAAOH,KAAhC,OACCQ,EAAoBL,EAAOlB,IACtBL,MAAK,SAAAC,GAEFQ,EAAME,WAAWD,EAAQY,QAAO,SAAA4B,GAAC,OAAIA,EAAE7C,KAAOkB,EAAOlB,UAExD8C,OAAM,SAAAC,GACHR,EAAS,GAAD,OAAIrB,EAAOH,KAAX,yBACRiC,QAAQC,IAAI,yBAA0BF,GACtCG,YAAW,WACPX,EAAS,QACV,QAW4BY,CAAajC,KAApD,gBCUGkC,EA5CH,WAAO,IAAD,EACkBf,mBAAS,IAD3B,mBACNhC,EADM,KACGC,EADH,OAEkB+B,mBAAS,IAF3B,mBAEN9B,EAFM,KAEGC,EAFH,OAGsB6B,mBAAS,IAH/B,mBAGN5B,EAHM,KAGKC,EAHL,OAIsB2B,mBAAS,IAJ/B,mBAING,EAJM,KAIKa,EAJL,KAkBd,OARAC,qBAAU,WACR/B,IACG5B,MAAK,SAAAC,GACJU,EAAWV,QAEd,IAID,6BACE,sCACA,2BAAOgC,MAAOY,EACdX,SAhBuB,SAACjB,GACxByC,EAAazC,EAAMkB,OAAOF,UAiB1B,kBAAC,EAAD,CACAvB,QAASA,EACTC,WAAYA,EACZC,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACXC,aAAcA,IAEd,uCACA,kBAAC,EAAD,CAASL,QAASA,EAClBC,WAAYA,EACZkC,UAAWA,M,MCpCnBe,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.16b57d8c.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst add = personObject => {\n    const request = axios.post(baseUrl, personObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, personObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, personObject)\n  return request.then(response => response.data)\n}\n\nconst deleteEntry = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, add, update, deleteEntry }\n","import React, { useState } from 'react'\nimport service from '../service'\n//getAll update add\n\nconst PersonForm = (props) => {\n    const persons = props.persons\n    const setPersons = props.setPersons\n    const newName = props.newName\n    const setNewName = props.setNewName\n    const newNumber = props.newNumber\n    const setNewNumber = props.setNewNumber\n\n\n    const nameExists = (input) => {\n        const match = persons.filter( person => {\n            if (person.name === input)\n                return person\n        })\n        return match\n    }\n\n    const addPerson = (personObject) => {\n\n        service.add(personObject)\n            .then(response => {\n                setPersons(persons.concat(response))\n            })\n        \n        setNewName('')\n        setNewNumber('')\n    }\n\n    const updatePerson = (id, personObject) => {\n        service.update(id, personObject)\n            .then(response => {\n                setPersons(persons.map(person => person.id !== id ? person : response\n                ))\n            })\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleNewPerson = (event) => {\n\n        event.preventDefault()\n\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n\n        let [ match ]  = nameExists(newName)\n        match = (!match ? '' : match)\n\n        if(match.number === newNumber) {\n            alert(`${newName} already added`)\n        } \n        else if (match.name === newName \n        && match.number !== newNumber ) {\n            if (window.confirm(`${newName} already exists. Replace the old number?`)) \n                updatePerson(match.id, personObject)\n        } \n        else {\n            addPerson(personObject)\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    return (\n        <>  \n        <h2>Add Person</h2>\n        <form onSubmit={handleNewPerson} >\n          <div>\n            name: <input value={newName} \n            onChange={handleNameChange}\n            />\n          </div>\n          <div>\n            number: <input value={newNumber} \n            onChange={handleNumberChange}\n            />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n        </>\n    )\n}\n\nexport default PersonForm","import React, { useState } from 'react'\nimport service from '../service'\n\nconst Persons = (props) => {\n    const [error, setError] = useState(null)\n\n    const persons = props.persons\n    const setPersons = props.setPersons\n    const newSearch = props.newSearch\n    const search = () => {\n        return (\n            persons.filter(person =>  \n                (person.name).toLowerCase().indexOf(newSearch.toLowerCase()) > -1\n            )\n        )\n    }\n\n    const handleDelete = (person) => {\n        if(window.confirm(`Delete ${person.name}?`))\n            service.deleteEntry(person.id)\n                .then(response => {\n                    //creates copy of array before and after element\n                    props.setPersons(persons.filter(p => p.id !== person.id))\n                })\n                .catch(err => {\n                    setError(`${person.name} was already removed`)\n                    console.log('Failed to delete entry', err)\n                    setTimeout(() => { \n                        setError(null)\n                    }, 5000)\n                }\n                )\n    }\n\n    return (\n        <>\n        <Notification message={error} />\n        {search().map(person => \n            <>\n            <Numbers key={person.number} name={person.name} number={person.number} />\n            <button key={person.id} onClick={() => handleDelete(person)} >delete</button>\n            </>\n            )}\n        </>\n    )\n}\n\nconst Notification = ({ message }) => {\n    if (message === null) \n        return null\n\n    return (\n        <div className=\"error\" >\n            {message}\n        </div>\n    )\n}\n\n\nconst Numbers = (props) => {\n    \n    return (\n    <p>\n        <b>{props.name}</b>: {props.number}\n    </p>\n    )\n}\n\nexport default Persons","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport service from './service'\n//getAll add update\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ newSearch, setNewSearch ] = useState('')\n\n    const handleSearchChange = (event) => {\n        setNewSearch(event.target.value)\n    }\n\n    useEffect(() => {\n      service.getAll()\n        .then(response => {\n          setPersons(response)\n        })\n    }, [])\n\n\n    return (\n      <div>\n        <h2>Search</h2>\n        <input value={newSearch}\n        onChange={handleSearchChange}\n        />\n        <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        />\n        <h2>Numbers</h2>\n        <Persons persons={persons} \n        setPersons={setPersons}\n        newSearch={newSearch}\n        />\n      </div>\n    )\n}\n\n\n\n\nexport default App\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}