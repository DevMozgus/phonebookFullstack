{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst add = personObject => {\n  const request = axios.post(baseUrl, personObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, personObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, personObject);\n  return request.then(response => response.data);\n};\n\nconst deleteEntry = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default {\n  getAll,\n  add,\n  update,\n  deleteEntry\n};","map":{"version":3,"sources":["/home/niko/Documents/web/openstack/phonebookHeroku/frontend/src/service.js"],"names":["axios","baseUrl","getAll","request","get","then","response","data","add","personObject","post","update","id","put","deleteEntry","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,cAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB;AACA,SAAOE,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACH,CAHD;;AAKA,MAAMC,GAAG,GAAGC,YAAY,IAAI;AACxB,QAAMN,OAAO,GAAGH,KAAK,CAACU,IAAN,CAAWT,OAAX,EAAoBQ,YAApB,CAAhB;AACA,SAAON,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACH,CAHD;;AAKA,MAAMI,MAAM,GAAG,CAACC,EAAD,EAAKH,YAAL,KAAsB;AACnC,QAAMN,OAAO,GAAGH,KAAK,CAACa,GAAN,CAAW,GAAEZ,OAAQ,IAAGW,EAAG,EAA3B,EAA8BH,YAA9B,CAAhB;AACA,SAAON,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMO,WAAW,GAAGF,EAAE,IAAI;AACxB,SAAOZ,KAAK,CAACe,MAAN,CAAc,GAAEd,OAAQ,IAAGW,EAAG,EAA9B,CAAP;AACD,CAFD;;AAIA,eAAe;AAAEV,EAAAA,MAAF;AAAUM,EAAAA,GAAV;AAAeG,EAAAA,MAAf;AAAuBG,EAAAA;AAAvB,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst add = personObject => {\n    const request = axios.post(baseUrl, personObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, personObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, personObject)\n  return request.then(response => response.data)\n}\n\nconst deleteEntry = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, add, update, deleteEntry }\n"]},"metadata":{},"sourceType":"module"}