{"ast":null,"code":"var _jsxFileName = \"/home/niko/Documents/web/openstack/phonebook/src/components/PersonForm.js\";\nimport React, { useState } from 'react';\nimport service from '../service'; //getAll update add\n\nconst PersonForm = props => {\n  const persons = props.persons;\n  const setPersons = props.setPersons;\n  const newName = props.newName;\n  const setNewName = props.setNewName;\n  const newNumber = props.newNumber;\n  const setNewNumber = props.setNewNumber;\n\n  const nameExists = input => {\n    const match = persons.filter(person => {\n      if (person.name === input) return person;\n    });\n    return match;\n  };\n\n  const addPerson = personObject => {\n    service.add(personObject).then(response => {\n      setPersons(persons.concat(response));\n    });\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const updatePerson = (id, personObject) => {\n    service.update(id, personObject).then(response => {\n      setPersons(persons.map(person => person.id !== id ? person : response));\n    });\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const handleNewPerson = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n    let [match] = nameExists(newName);\n    match = match === undefined ? '' : match;\n\n    if (match.number === newNumber) {\n      alert(`${newName} already added`);\n    } else if (match.name === newName && match.number !== newNumber) {\n      if (window.confirm(`${newName} already exists. Replace the old number?`)) updatePerson(match.id, personObject);\n    } else {\n      addPerson(personObject);\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Add Person\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleNewPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"name: \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newName,\n    onChange: handleNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"number: \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newNumber,\n    onChange: handleNumberChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"add\"))));\n};\n\nexport default PersonForm;","map":{"version":3,"sources":["/home/niko/Documents/web/openstack/phonebook/src/components/PersonForm.js"],"names":["React","useState","service","PersonForm","props","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameExists","input","match","filter","person","name","addPerson","personObject","add","then","response","concat","updatePerson","id","update","map","handleNewPerson","event","preventDefault","number","undefined","alert","window","confirm","handleNameChange","target","value","handleNumberChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport service from '../service'\n//getAll update add\n\nconst PersonForm = (props) => {\n    const persons = props.persons\n    const setPersons = props.setPersons\n    const newName = props.newName\n    const setNewName = props.setNewName\n    const newNumber = props.newNumber\n    const setNewNumber = props.setNewNumber\n\n\n    const nameExists = (input) => {\n        const match = persons.filter( person => {\n            if (person.name === input)\n                return person\n        })\n        return match\n    }\n\n    const addPerson = (personObject) => {\n\n        service.add(personObject)\n            .then(response => {\n                setPersons(persons.concat(response))\n            })\n        \n        setNewName('')\n        setNewNumber('')\n    }\n\n    const updatePerson = (id, personObject) => {\n        service.update(id, personObject)\n            .then(response => {\n                setPersons(persons.map(person => person.id !== id ? person : response\n                ))\n            })\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleNewPerson = (event) => {\n\n        event.preventDefault()\n\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n\n        let [ match ]  = nameExists(newName)\n        match = (match === undefined ? '' : match)\n\n        if(match.number === newNumber) {\n            alert(`${newName} already added`)\n        } \n        else if (match.name === newName \n        && match.number !== newNumber ) {\n            if (window.confirm(`${newName} already exists. Replace the old number?`)) \n                updatePerson(match.id, personObject)\n        } \n        else {\n            addPerson(personObject)\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    return (\n        <>\n        <h2>Add Person</h2>\n        <form onSubmit={handleNewPerson} >\n          <div>\n            name: <input value={newName} \n            onChange={handleNameChange}\n            />\n          </div>\n          <div>\n            number: <input value={newNumber} \n            onChange={handleNumberChange}\n            />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n        </>\n    )\n}\n\nexport default PersonForm"]},"metadata":{},"sourceType":"module"}