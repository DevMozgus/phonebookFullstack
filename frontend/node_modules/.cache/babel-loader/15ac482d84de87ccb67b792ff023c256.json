{"ast":null,"code":"var _jsxFileName = \"/home/niko/Documents/web/openstack/src/App.js\";\nimport React, { useState } from 'react';\n\nconst App = () => {\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const handleNewPerson = event => {\n    event.preventDefault();\n\n    if (nameExists(newName)) {} else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      };\n      setPersons(persons.concat(personObject));\n    }\n\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const nameExists = input => {\n    const match = persons.map(person => {\n      if (person.name === input) return true;\n    });\n    console.log(match);\n    return false;\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleNewPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"name: \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newName,\n    onChange: handleNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"number: \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newNumber,\n    onChange: handleNumberChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"add\"))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Numbers\"), persons.map(person => /*#__PURE__*/React.createElement(Numbers, {\n    key: person.name,\n    name: person.name,\n    number: person.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })));\n};\n\nconst Numbers = props => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, props.name), \": \", props.number);\n};\n\nexport default App;","map":{"version":3,"sources":["/home/niko/Documents/web/openstack/src/App.js"],"names":["React","useState","App","persons","setPersons","name","number","newName","setNewName","newNumber","setNewNumber","handleNewPerson","event","preventDefault","nameExists","personObject","concat","input","match","map","person","console","log","handleNameChange","target","value","handleNumberChange","Numbers","props"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([\n        { name: 'Arto Hellas', number: '040-123456' },\n        { name: 'Ada Lovelace', number: '39-44-5323523' },\n        { name: 'Dan Abramov', number: '12-43-234345' },\n        { name: 'Mary Poppendieck', number: '39-23-6423122' }\n    ]) \n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n\n    const handleNewPerson = (event) => {\n        event.preventDefault()\n        if(nameExists(newName)) {\n\n        } else {\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n        setPersons(persons.concat(personObject))\n        }\n\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const nameExists = (input) => {\n        const match =persons.map( person => {\n            if (person.name === input)\n                return true\n        })\n        console.log(match)\n\n        return (false)\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <form onSubmit={handleNewPerson} >\n          <div>\n            name: <input value={newName} \n            onChange={handleNameChange}\n            />\n          </div>\n          <div>\n            number: <input value={newNumber} \n            onChange={handleNumberChange}\n            />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n        <h2>Numbers</h2>\n        {persons.map(person => \n            <Numbers key={person.name} name={person.name} number={person.number} />\n            )}\n      </div>\n    )\n}\n\nconst Numbers = (props) => {\n    return (\n    <p>\n        <b>{props.name}</b>: {props.number}\n    </p>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}