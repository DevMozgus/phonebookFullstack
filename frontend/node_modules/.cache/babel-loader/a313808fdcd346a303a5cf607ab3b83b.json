{"ast":null,"code":"import _slicedToArray from\"/home/niko/Documents/web/openstack/phonebookHeroku/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import service from'../service';//getAll update add\nvar PersonForm=function PersonForm(props){var persons=props.persons;var setPersons=props.setPersons;var newName=props.newName;var setNewName=props.setNewName;var newNumber=props.newNumber;var setNewNumber=props.setNewNumber;var nameExists=function nameExists(input){var match=persons.filter(function(person){if(person.name===input)return person;});return match;};var addPerson=function addPerson(personObject){service.add(personObject).then(function(response){setPersons(persons.concat(response));});setNewName('');setNewNumber('');};var updatePerson=function updatePerson(id,personObject){service.update(id,personObject).then(function(response){setPersons(persons.map(function(person){return person.id!==id?person:response;}));});setNewName('');setNewNumber('');};var handleNewPerson=function handleNewPerson(event){event.preventDefault();var personObject={name:newName,number:newNumber};var _nameExists=nameExists(newName),_nameExists2=_slicedToArray(_nameExists,1),match=_nameExists2[0];match=!match?'':match;if(match.number===newNumber){alert(\"\".concat(newName,\" already added\"));}else if(match.name===newName&&match.number!==newNumber){if(window.confirm(\"\".concat(newName,\" already exists. Replace the old number?\")))updatePerson(match.id,personObject);}else{addPerson(personObject);}};var handleNameChange=function handleNameChange(event){setNewName(event.target.value);};var handleNumberChange=function handleNumberChange(event){setNewNumber(event.target.value);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Add Person\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleNewPerson},/*#__PURE__*/React.createElement(\"div\",null,\"name: \",/*#__PURE__*/React.createElement(\"input\",{value:newName,onChange:handleNameChange})),/*#__PURE__*/React.createElement(\"div\",null,\"number: \",/*#__PURE__*/React.createElement(\"input\",{value:newNumber,onChange:handleNumberChange})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"add\"))));};export default PersonForm;","map":{"version":3,"sources":["/home/niko/Documents/web/openstack/phonebookHeroku/frontend/src/components/PersonForm.js"],"names":["React","useState","service","PersonForm","props","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameExists","input","match","filter","person","name","addPerson","personObject","add","then","response","concat","updatePerson","id","update","map","handleNewPerson","event","preventDefault","number","alert","window","confirm","handleNameChange","target","value","handleNumberChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport service from '../service'\n//getAll update add\n\nconst PersonForm = (props) => {\n    const persons = props.persons\n    const setPersons = props.setPersons\n    const newName = props.newName\n    const setNewName = props.setNewName\n    const newNumber = props.newNumber\n    const setNewNumber = props.setNewNumber\n\n\n    const nameExists = (input) => {\n        const match = persons.filter( person => {\n            if (person.name === input)\n                return person\n        })\n        return match\n    }\n\n    const addPerson = (personObject) => {\n\n        service.add(personObject)\n            .then(response => {\n                setPersons(persons.concat(response))\n            })\n        \n        setNewName('')\n        setNewNumber('')\n    }\n\n    const updatePerson = (id, personObject) => {\n        service.update(id, personObject)\n            .then(response => {\n                setPersons(persons.map(person => person.id !== id ? person : response\n                ))\n            })\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleNewPerson = (event) => {\n\n        event.preventDefault()\n\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n\n        let [ match ]  = nameExists(newName)\n        match = (!match ? '' : match)\n\n        if(match.number === newNumber) {\n            alert(`${newName} already added`)\n        } \n        else if (match.name === newName \n        && match.number !== newNumber ) {\n            if (window.confirm(`${newName} already exists. Replace the old number?`)) \n                updatePerson(match.id, personObject)\n        } \n        else {\n            addPerson(personObject)\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    return (\n        <>  \n        <h2>Add Person</h2>\n        <form onSubmit={handleNewPerson} >\n          <div>\n            name: <input value={newName} \n            onChange={handleNameChange}\n            />\n          </div>\n          <div>\n            number: <input value={newNumber} \n            onChange={handleNumberChange}\n            />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n        </>\n    )\n}\n\nexport default PersonForm"]},"metadata":{},"sourceType":"module"}