{"ast":null,"code":"import axios from'axios';var baseUrl='/api/persons';var getAll=function getAll(){var request=axios.get(baseUrl);return request.then(function(response){return response.data;});};var add=function add(personObject){var request=axios.post(baseUrl,personObject);return request.then(function(response){return response.data;});};var update=function update(id,personObject){var request=axios.put(\"\".concat(baseUrl,\"/\").concat(id),personObject);return request.then(function(response){return response.data;});};var deleteEntry=function deleteEntry(id){return axios.delete(\"\".concat(baseUrl,\"/\").concat(id));};export default{getAll:getAll,add:add,update:update,deleteEntry:deleteEntry};","map":{"version":3,"sources":["/home/niko/Documents/web/openstack/phonebookHeroku/frontend/src/service.js"],"names":["axios","baseUrl","getAll","request","get","then","response","data","add","personObject","post","update","id","put","deleteEntry","delete"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,OAAO,CAAG,cAAhB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,GAAMC,CAAAA,OAAO,CAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB,CACA,MAAOE,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACH,CAHD,CAKA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAAAC,YAAY,CAAI,CACxB,GAAMN,CAAAA,OAAO,CAAGH,KAAK,CAACU,IAAN,CAAWT,OAAX,CAAoBQ,YAApB,CAAhB,CACA,MAAON,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACH,CAHD,CAKA,GAAMI,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,EAAD,CAAKH,YAAL,CAAsB,CACnC,GAAMN,CAAAA,OAAO,CAAGH,KAAK,CAACa,GAAN,WAAaZ,OAAb,aAAwBW,EAAxB,EAA8BH,YAA9B,CAAhB,CACA,MAAON,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACD,CAHD,CAKA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAF,EAAE,CAAI,CACxB,MAAOZ,CAAAA,KAAK,CAACe,MAAN,WAAgBd,OAAhB,aAA2BW,EAA3B,EAAP,CACD,CAFD,CAIA,cAAe,CAAEV,MAAM,CAANA,MAAF,CAAUM,GAAG,CAAHA,GAAV,CAAeG,MAAM,CAANA,MAAf,CAAuBG,WAAW,CAAXA,WAAvB,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst add = personObject => {\n    const request = axios.post(baseUrl, personObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, personObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, personObject)\n  return request.then(response => response.data)\n}\n\nconst deleteEntry = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, add, update, deleteEntry }\n"]},"metadata":{},"sourceType":"module"}