{"version":3,"sources":["service.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObject","post","id","put","delete","Notification","message","className","PersonForm","props","persons","setPersons","newName","setNewName","newNumber","setNewNumber","useState","error","setError","onSubmit","event","preventDefault","input","name","number","filter","person","match","alert","window","confirm","service","map","catch","err","JSON","stringify","setTimeout","updatePerson","concat","console","log","addPerson","value","onChange","target","type","Numbers","Persons","newSearch","toLowerCase","indexOf","key","onClick","p","handleDelete","App","setNewSearch","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b162dbce.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst add = personObject => {\n    const request = axios.post(baseUrl, personObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, personObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, personObject)\n  return request.then(response => response.data)\n}\n\nconst deleteEntry = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, add, update, deleteEntry }\n","import React, { useState } from 'react'\nimport service from '../service'\n//getAll update add\n\nconst PersonForm = (props) => {\n    const persons = props.persons\n    const setPersons = props.setPersons\n    const newName = props.newName\n    const setNewName = props.setNewName\n    const newNumber = props.newNumber\n    const setNewNumber = props.setNewNumber\n    const [error, setError ] = useState(null)\n\n\n    const nameExists = (input) => {\n        const match = persons.filter( person => {\n            if (person.name === input)\n                return person\n        })\n        return match\n    }\n\n    const addPerson = (personObject) => {\n\n        service.add(personObject)\n            .then(response => {\n                setPersons(persons.concat(response))\n            })\n            .catch(err => {\n                setError(JSON.stringify(err.response.data))\n                console.log(err)\n                setTimeout(() => { \n                    setError(null)\n                }, 5000)\n            })\n        \n        setNewName('')\n        setNewNumber('')\n    }\n\n    const updatePerson = (id, personObject) => {\n        service.update(id, personObject)\n            .then(response => {\n                setPersons(persons.map(person => person.id !== id ? person : response\n                ))\n            })\n            .catch(err => {\n                setError(JSON.stringify(err.response.data))\n                setTimeout(() => { \n                    setError(null)\n                }, 5000)\n            })\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleNewPerson = (event) => {\n\n        event.preventDefault()\n\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n\n        let [ match ]  = nameExists(newName)\n        match = (!match ? '' : match)\n\n        if(match.number === newNumber) {\n            alert(`${newName} already added`)\n        } \n        else if (match.name === newName \n        && match.number !== newNumber ) {\n            if (window.confirm(`${newName} already exists. Replace the old number?`)) \n                updatePerson(match.id, personObject)\n        } \n        else {\n            addPerson(personObject)\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    return (\n        <>  \n        <Notification message={error} />\n        <h2>Add Person</h2>\n        <form onSubmit={handleNewPerson} >\n          <div>\n            name: <input value={newName} \n            onChange={handleNameChange}\n            />\n          </div>\n          <div>\n            number: <input value={newNumber} \n            onChange={handleNumberChange}\n            />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n        </>\n    )\n}\n\nconst Notification = ({ message }) => {\n    if (message === null) \n        return null\n\n    return (\n        <div className=\"error\" >\n            {message}\n        </div>\n    )\n}\n\nexport default PersonForm","import React, { useState } from 'react'\nimport service from '../service'\n\nconst Persons = (props) => {\n    const [error, setError] = useState(null)\n\n    const persons = props.persons\n    const setPersons = props.setPersons\n    const newSearch = props.newSearch\n    const search = () => {\n        return (\n            persons.filter(person =>  \n                (person.name).toLowerCase().indexOf(newSearch.toLowerCase()) > -1\n            )\n        )\n    }\n\n    const handleDelete = (person) => {\n        if(window.confirm(`Delete ${person.name}?`))\n            service.deleteEntry(person.id)\n                .then(response => {\n                    //creates copy of array before and after element\n                    props.setPersons(persons.filter(p => p.id !== person.id))\n                })\n                .catch(err => {\n                    setError(`${person.name} was already removed`)\n                    console.log('Failed to delete entry', err)\n                    setTimeout(() => { \n                        setError(null)\n                    }, 5000)\n                }\n                )\n    }\n\n    return (\n        <>\n        {search().map(person => \n            <>\n            <Numbers key={person.number} name={person.name} number={person.number} />\n            <button key={person.id} onClick={() => handleDelete(person)} >delete</button>\n            </>\n            )}\n        <Notification message={error} />\n        </>\n    )\n}\n\nconst Notification = ({ message }) => {\n    if (message === null) \n        return null\n\n    return (\n        <div className=\"error\" >\n            {message}\n        </div>\n    )\n}\n\n\nconst Numbers = (props) => {\n    \n    return (\n    <p>\n        <b>{props.name}</b>: {props.number}\n    </p>\n    )\n}\n\nexport default Persons","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport service from './service'\n//getAll add update\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ newSearch, setNewSearch ] = useState('')\n\n    const handleSearchChange = (event) => {\n        setNewSearch(event.target.value)\n    }\n\n    useEffect(() => {\n      service.getAll()\n        .then(response => {\n          setPersons(response)\n        })\n    }, [])\n\n\n    return (\n      <div>\n        <h2>Search</h2>\n        <input value={newSearch}\n        onChange={handleSearchChange}\n        />\n        <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        />\n        <h2>Numbers</h2>\n        <Persons persons={persons} \n        setPersons={setPersons}\n        newSearch={newSearch}\n        />\n      </div>\n    )\n}\n\n\n\n\nexport default App\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}